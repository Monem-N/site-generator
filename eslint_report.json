[{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/Builder.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/CMSIntegrationModule.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/DocsifyIntegration.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/DocsifyWebsiteGenerator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/OpenAPIParser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/TestGenerator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/WebsiteGenerator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/Builder.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/DocsifyWebsiteGenerator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/TestGenerator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/WebsiteGenerator.test.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'generator' is assigned a value but never used.","line":242,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":242,"endColumn":20,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'generator' is assigned a value but never used.","line":251,"column":11,"nodeType":"Identifier","messageId":"unusedVar","endLine":251,"endColumn":20,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/components/ComponentGenerator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/navigation/NavigationGenerator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/parsers/DocsifyMarkdownParser.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/parsers/OpenAPIParser.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/parsers/ParserFactory.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/MarkdownEnhancerPlugin.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/PluginLoader.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/PluginSystem.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/SiteMapGenerator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/SyntaxHighlightPlugin.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/plugins/TableOfContentsPlugin.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/services/ParserService.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/simple-test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/simple.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/simple/basic.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/templates/HandlebarsTemplateEngine.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/templates/TemplateManager.test.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_fs' is defined but never used.","line":6,"column":13,"nodeType":"Identifier","messageId":"unusedVar","endLine":6,"endColumn":16}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { TemplateManager } from '../../templates/TemplateManager.js';\nimport { TemplateEngine } from '../../templates/TemplateEngine.js';\nimport { HandlebarsTemplateEngine } from '../../templates/HandlebarsTemplateEngine.js';\nimport { EjsTemplateEngine } from '../../templates/EjsTemplateEngine.js';\nimport { createMockParsedContent } from '../utils/test-helpers.js';\nimport * as _fs from 'fs';\nimport * as path from 'path';\n\n// Mock dependencies\njest.mock('fs');\njest.mock('path');\njest.mock('../../templates/HandlebarsTemplateEngine');\njest.mock('../../templates/EjsTemplateEngine');\n\ndescribe('TemplateManager', () => {\n  let templateManager: TemplateManager;\n  let mockHandlebarsEngine: jest.Mocked<HandlebarsTemplateEngine>;\n  let mockEjsEngine: jest.Mocked<EjsTemplateEngine>;\n\n  beforeEach(() => {\n    // Reset mocks\n    jest.clearAllMocks();\n\n    // Create mock template engines\n    mockHandlebarsEngine = new HandlebarsTemplateEngine() as jest.Mocked<HandlebarsTemplateEngine>;\n    mockEjsEngine = new EjsTemplateEngine() as jest.Mocked<EjsTemplateEngine>;\n\n    // Mock the constructors\n    (HandlebarsTemplateEngine as jest.Mock).mockImplementation(() => mockHandlebarsEngine);\n    (EjsTemplateEngine as jest.Mock).mockImplementation(() => mockEjsEngine);\n\n    // Create the template manager\n    templateManager = new TemplateManager({\n      defaultEngine: 'handlebars',\n      handlebarsOptions: {\n        partialsDir: '/test/partials',\n      },\n      ejsOptions: {\n        includesDir: '/test/includes',\n      },\n    });\n  });\n\n  test('should initialize with default engines', () => {\n    expect(templateManager).toBeDefined();\n    expect(HandlebarsTemplateEngine).toHaveBeenCalled();\n    expect(EjsTemplateEngine).toHaveBeenCalled();\n  });\n\n  test('should register a custom template engine', () => {\n    // Create a mock custom engine\n    const mockCustomEngine = {\n      render: jest.fn().mockResolvedValue('<div>Custom Template</div>'),\n      renderContent: jest.fn().mockResolvedValue('<div>Custom Content</div>'),\n      clearCache: jest.fn(),\n    } as unknown as TemplateEngine;\n\n    // Register the custom engine\n    templateManager.registerEngine('custom', mockCustomEngine);\n\n    // Get the custom engine\n    const engine = templateManager.getEngine('custom');\n    expect(engine).toBe(mockCustomEngine);\n  });\n\n  test('should get the default engine when no name is provided', () => {\n    const engine = templateManager.getEngine();\n    expect(engine).toBe(mockHandlebarsEngine);\n  });\n\n  test('should throw an error when getting a non-existent engine', () => {\n    expect(() => templateManager.getEngine('non-existent')).toThrow();\n  });\n\n  test('should infer engine from file extension', async () => {\n    // Mock path.extname to return the file extension\n    (path.extname as jest.Mock).mockImplementation((filePath: string) => {\n      const parts = filePath.split('.');\n      return parts.length > 1 ? `.${parts[parts.length - 1]}` : '';\n    });\n\n    // Mock the render methods\n    mockHandlebarsEngine.render.mockResolvedValue('<div>Handlebars Template</div>');\n    mockEjsEngine.render.mockResolvedValue('<div>EJS Template</div>');\n\n    // Render templates with different extensions\n    await templateManager.render('template.hbs', { title: 'Test' });\n    await templateManager.render('template.ejs', { title: 'Test' });\n    await templateManager.render('template.txt', { title: 'Test' });\n\n    // Verify that the correct engines were used\n    expect(mockHandlebarsEngine.render).toHaveBeenCalledTimes(2); // .hbs and .txt (default)\n    expect(mockEjsEngine.render).toHaveBeenCalledTimes(1); // .ejs\n  });\n\n  test('should render content with the specified engine', async () => {\n    // Create mock parsed content\n    const mockContent = createMockParsedContent({\n      title: 'Test Document',\n      description: 'Test description',\n    });\n\n    // Mock the renderContent method\n    mockHandlebarsEngine.renderContent.mockResolvedValue('<div>Rendered Content</div>');\n\n    // Render content with the handlebars engine\n    const result = await templateManager.renderContent(\n      mockContent,\n      'template.hbs',\n      undefined,\n      'handlebars'\n    );\n\n    // Verify the result\n    expect(result).toBe('<div>Rendered Content</div>');\n    expect(mockHandlebarsEngine.renderContent).toHaveBeenCalledWith(\n      mockContent,\n      'template.hbs',\n      undefined\n    );\n  });\n\n  test('should clear cache for all engines', () => {\n    // Clear the cache\n    templateManager.clearCache();\n\n    // Verify that clearCache was called on all engines\n    expect(mockHandlebarsEngine.clearCache).toHaveBeenCalled();\n    expect(mockEjsEngine.clearCache).toHaveBeenCalled();\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/templates/helpers/component-helper.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/tools/plugin-docs-generator.test.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_PluginDocsGeneratorInternals' is defined but never used.","line":34,"column":15,"nodeType":"Identifier","messageId":"unusedVar","endLine":34,"endColumn":44}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { PluginDocsGenerator } from '../../tools/plugin-docs-generator.js';\nimport { Plugin } from '../../../types/plugin.js';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n// Mock dependencies\njest.mock('fs');\njest.mock('path');\n\ndescribe('PluginDocsGenerator', () => {\n  let generator: PluginDocsGenerator;\n  let mockPlugin1: Plugin;\n  let mockPlugin2: Plugin;\n\n  beforeEach(() => {\n    // Reset mocks\n    jest.clearAllMocks();\n\n    // Mock fs.existsSync to return false for directories\n    (fs.existsSync as jest.Mock).mockReturnValue(false);\n\n    // Mock fs.mkdirSync to do nothing\n    (fs.mkdirSync as jest.Mock).mockImplementation(() => {\n      return undefined;\n    });\n\n    // Define interface for fs.promises mock to replace 'any'\n    interface FSPromisesMock {\n      writeFile: jest.Mock;\n      [key: string]: unknown; // Allow for additional properties\n    }\n\n    // Define interface for PluginDocsGenerator internals to avoid using 'any'\n    interface _PluginDocsGeneratorInternals {\n      plugins: Plugin[];\n      [key: string]: unknown; // Allow for additional properties\n    }\n\n    // Mock fs.promises.writeFile to do nothing\n    (fs.promises as unknown as FSPromisesMock) = {\n      writeFile: jest.fn().mockResolvedValue(undefined),\n    };\n\n    // Mock path.join to concatenate paths\n    (path.join as jest.Mock).mockImplementation((...paths: string[]) => paths.join('/'));\n\n    // Create mock plugins\n    mockPlugin1 = {\n      name: 'test-plugin-1',\n      description: 'A test plugin',\n      hooks: {\n        beforeParse: jest.fn(),\n        afterParse: jest.fn(),\n      },\n      options: {\n        option1: {\n          type: 'string',\n          description: 'Option 1 description',\n          required: true,\n        },\n        option2: {\n          type: 'boolean',\n          description: 'Option 2 description',\n          required: false,\n          default: false,\n        },\n      },\n    };\n\n    mockPlugin2 = {\n      name: 'test-plugin-2',\n      description: 'Another test plugin',\n      hooks: {\n        beforeBuild: jest.fn(),\n        afterBuild: jest.fn(),\n      },\n    };\n\n    // Create the generator\n    generator = new PluginDocsGenerator('/test/docs');\n  });\n\n  test('should initialize with the output directory', () => {\n    expect(generator).toBeDefined();\n  });\n\n  test('should add plugins', () => {\n    // Add plugins\n    generator.addPlugin(mockPlugin1);\n    generator.addPlugin(mockPlugin2);\n\n    // Verify that the plugins were added\n    expect((generator as unknown as PluginDocsGeneratorInternals).plugins).toHaveLength(2);\n    expect((generator as unknown as PluginDocsGeneratorInternals).plugins[0]).toBe(mockPlugin1);\n    expect((generator as unknown as PluginDocsGeneratorInternals).plugins[1]).toBe(mockPlugin2);\n  });\n\n  test('should generate documentation', async () => {\n    // Add plugins\n    generator.addPlugin(mockPlugin1);\n    generator.addPlugin(mockPlugin2);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Verify that the output directory was created\n    expect(fs.existsSync).toHaveBeenCalledWith('/test/docs');\n    expect(fs.mkdirSync).toHaveBeenCalledWith('/test/docs', { recursive: true });\n\n    // Verify that the index file was generated\n    expect(fs.promises.writeFile).toHaveBeenCalledWith(\n      '/test/docs/README.md',\n      expect.stringContaining('# Plugin Documentation'),\n      undefined\n    );\n\n    // Verify that the plugin documentation files were generated\n    expect(fs.promises.writeFile).toHaveBeenCalledWith(\n      '/test/docs/test-plugin-1.md',\n      expect.stringContaining('# test-plugin-1 Plugin'),\n      undefined\n    );\n    expect(fs.promises.writeFile).toHaveBeenCalledWith(\n      '/test/docs/test-plugin-2.md',\n      expect.stringContaining('# test-plugin-2 Plugin'),\n      undefined\n    );\n  });\n\n  test('should generate index file with plugin links', async () => {\n    // Add plugins\n    generator.addPlugin(mockPlugin1);\n    generator.addPlugin(mockPlugin2);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the index file content\n    const indexFileCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/README.md'\n    );\n    const indexContent = indexFileCall ? indexFileCall[1] : '';\n\n    // Verify the index content\n    expect(indexContent).toContain('# Plugin Documentation');\n    expect(indexContent).toContain('## Available Plugins');\n    expect(indexContent).toContain('- [test-plugin-1](test-plugin-1.md): A test plugin');\n    expect(indexContent).toContain('- [test-plugin-2](test-plugin-2.md): Another test plugin');\n  });\n\n  test('should generate plugin documentation with hooks', async () => {\n    // Add a plugin\n    generator.addPlugin(mockPlugin1);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/test-plugin-1.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('# test-plugin-1 Plugin');\n    expect(pluginDocContent).toContain('A test plugin');\n    expect(pluginDocContent).toContain('## Hooks');\n    expect(pluginDocContent).toContain('- `beforeParse`: Called before parsing content');\n    expect(pluginDocContent).toContain('- `afterParse`: Called after parsing content');\n  });\n\n  test('should generate plugin documentation with options', async () => {\n    // Add a plugin\n    generator.addPlugin(mockPlugin1);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/test-plugin-1.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('## Options');\n    expect(pluginDocContent).toContain('| Option | Type | Description | Required | Default |');\n    expect(pluginDocContent).toContain('| `option1` | `string` | Option 1 description | Yes | - |');\n    expect(pluginDocContent).toContain(\n      '| `option2` | `boolean` | Option 2 description | No | false |'\n    );\n  });\n\n  test('should handle plugins without hooks', async () => {\n    // Create a plugin without hooks\n    const pluginWithoutHooks: Plugin = {\n      name: 'plugin-without-hooks',\n      description: 'A plugin without hooks',\n    };\n\n    // Add the plugin\n    generator.addPlugin(pluginWithoutHooks);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/plugin-without-hooks.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('## Hooks');\n    expect(pluginDocContent).toContain('This plugin does not implement any hooks.');\n  });\n\n  test('should handle plugins without options', async () => {\n    // Create a plugin without options\n    const pluginWithoutOptions: Plugin = {\n      name: 'plugin-without-options',\n      description: 'A plugin without options',\n      hooks: {\n        beforeParse: jest.fn(),\n      },\n    };\n\n    // Add the plugin\n    generator.addPlugin(pluginWithoutOptions);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/plugin-without-options.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('## Options');\n    expect(pluginDocContent).toContain('This plugin does not have any options.');\n  });\n\n  test('should handle plugins without description', async () => {\n    // Create a plugin without description\n    const pluginWithoutDescription: Plugin = {\n      name: 'plugin-without-description',\n      hooks: {\n        beforeParse: jest.fn(),\n      },\n    };\n\n    // Add the plugin\n    generator.addPlugin(pluginWithoutDescription);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/plugin-without-description.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('# plugin-without-description Plugin');\n    expect(pluginDocContent).toContain('No description available.');\n  });\n\n  test('should handle plugins with examples', async () => {\n    // Create a plugin with examples\n    const pluginWithExamples: Plugin = {\n      name: 'plugin-with-examples',\n      description: 'A plugin with examples',\n      hooks: {\n        beforeParse: jest.fn(),\n      },\n      examples: [\n        'const plugin = new ExamplePlugin();\\ngenerator.addPlugin(plugin);',\n        'const plugin = new ExamplePlugin({ option: \"value\" });\\ngenerator.addPlugin(plugin);',\n      ],\n    };\n\n    // Add the plugin\n    generator.addPlugin(pluginWithExamples);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/plugin-with-examples.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('## Examples');\n    expect(pluginDocContent).toContain('```javascript');\n    expect(pluginDocContent).toContain('const plugin = new ExamplePlugin();');\n    expect(pluginDocContent).toContain('const plugin = new ExamplePlugin({ option: \"value\" });');\n  });\n\n  test('should handle plugins without examples', async () => {\n    // Add a plugin without examples\n    generator.addPlugin(mockPlugin1);\n\n    // Generate documentation\n    await generator.generateDocs();\n\n    // Get the plugin documentation content\n    const pluginDocCall = (fs.promises.writeFile as jest.Mock).mock.calls.find(\n      call => call[0] === '/test/docs/test-plugin-1.md'\n    );\n    const pluginDocContent = pluginDocCall ? pluginDocCall[1] : '';\n\n    // Verify the plugin documentation content\n    expect(pluginDocContent).toContain('## Examples');\n    expect(pluginDocContent).toContain('No examples available.');\n  });\n});\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/cache-simple.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/cache.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/config-validator.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/dependency-graph.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/dev-server.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/errors.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/incremental.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/performance.test.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/__tests__/utils/test-helpers.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/cli-enhanced.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/cli.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/component-generator/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/config/generator.config.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/navigation/NavigationGenerator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/optimization/performance-optimizer.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/parsers/DocsifyMarkdownParser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/parsers/OpenAPIParser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/parsers/Parser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/parsers/ParserFactory.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/CrossReferencePlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/MarkdownEnhancerPlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/MermaidPlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/PluginLoader.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-var-requires","severity":2,"message":"Require statement not part of import statement.","line":30,"column":20,"nodeType":"CallExpression","messageId":"noVarReqs","endLine":30,"endColumn":37,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/PluginManager.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'ParsedContent' is defined but never used.","line":2,"column":10,"nodeType":"Identifier","messageId":"unusedVar","endLine":2,"endColumn":23},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":109,"column":40,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":109,"endColumn":43,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2646,2649],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2646,2649],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":109,"column":72,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":109,"endColumn":75,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[2678,2681],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[2678,2681],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { Plugin } from '../../types/plugin.js';\nimport { ParsedContent } from '../../types/parser.js';\nimport { logger } from '../utils/logger.js';\n\nexport class PluginManager {\n  private plugins: Plugin[] = [];\n  // Flag to track if the plugin list has been modified\n\n  constructor(plugins: Plugin[] = []) {\n    this.plugins = [...plugins];\n  }\n\n  /**\n   * Get all registered plugins\n   */\n  getPlugins(): Plugin[] {\n    return this.plugins;\n  }\n\n  /**\n   * Register a new plugin\n   */\n  registerPlugin(plugin: Plugin): void {\n    this.plugins.push(plugin);\n  }\n\n  /**\n   * Initialize all plugins that have an initialize method\n   */\n  async initializePlugins(): Promise<void> {\n    for (const plugin of this.plugins) {\n      if (plugin.initialize) {\n        await plugin.initialize();\n      }\n    }\n  }\n\n  /**\n   * Execute a specific hook for all plugins\n   */\n  executeHook<T>(hookName: string, data: T, continueOnError = false): T {\n    let result = data;\n\n    for (const plugin of this.plugins) {\n      if (plugin.hooks && plugin.hooks[hookName]) {\n        try {\n          result = plugin.hooks[hookName](result, plugin.options);\n        } catch (error) {\n          if (!continueOnError) {\n            throw error;\n          }\n          logger.warn(`Error executing hook ${hookName} for plugin ${plugin.name}: ${error}`);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Execute a specific hook for a specific plugin\n   */\n  executeHookForPlugin<T>(hookName: string, pluginName: string, data: T): T {\n    const plugin = this.getPluginByName(pluginName);\n\n    if (!plugin || !plugin.hooks || !plugin.hooks[hookName]) {\n      return data;\n    }\n\n    try {\n      return plugin.hooks[hookName](data, plugin.options);\n    } catch (error) {\n      logger.error(`Error executing hook ${hookName} for plugin ${pluginName}: ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get a plugin by name\n   */\n  getPluginByName(name: string): Plugin | undefined {\n    return this.plugins.find(plugin => plugin.name === name);\n  }\n\n  /**\n   * Check if a plugin exists\n   */\n  hasPlugin(name: string): boolean {\n    return this.plugins.some(plugin => plugin.name === name);\n  }\n\n  /**\n   * Remove a plugin by name\n   */\n  removePlugin(name: string): void {\n    const index = this.plugins.findIndex(plugin => plugin.name === name);\n    if (index !== -1) {\n      this.plugins.splice(index, 1);\n    }\n  }\n\n  /**\n   * Legacy methods for backward compatibility\n   */\n  async applyBeforeParse(content: string, filePath: string): Promise<string> {\n    return this.executeHook('beforeParse', content, filePath);\n  }\n\n  async applyAfterParse(parsedContent: any, filePath: string): Promise<any> {\n    return this.executeHook('afterParse', parsedContent, filePath);\n  }\n\n  getPlugin(name: string): Plugin | undefined {\n    return this.getPluginByName(name);\n  }\n\n  register(plugin: Plugin): void {\n    this.registerPlugin(plugin);\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/PluginSystem.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/PrismPlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/SiteMapGenerator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/SyntaxHighlightPlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/TableOfContentsPlugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/plugins/docsify-plugin.ts","messages":[],"suppressedMessages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_element' is defined but never used.","line":137,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":137,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_designSystem' is defined but never used.","line":137,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":137,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_element' is defined but never used.","line":149,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":149,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_designSystem' is defined but never used.","line":149,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":149,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_element' is defined but never used.","line":161,"column":24,"nodeType":"Identifier","messageId":"unusedVar","endLine":161,"endColumn":32,"suppressions":[{"kind":"directive","justification":""}]},{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'_designSystem' is defined but never used.","line":161,"column":34,"nodeType":"Identifier","messageId":"unusedVar","endLine":161,"endColumn":47,"suppressions":[{"kind":"directive","justification":""}]}],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/services/BaseService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/services/ParserService.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/EjsTemplateEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/HandlebarsTemplateEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/TemplateEngine.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/TemplateManager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/docsify-templates.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/templates/helpers/component-helper.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/test-compile.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/themes/DocsifyThemeAdapter.ts","messages":[{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":39,"column":43,"nodeType":null,"messageId":"insert","endLine":39,"endColumn":43,"fix":{"range":[1010,1010],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":40,"column":8,"nodeType":null,"messageId":"insert","endLine":40,"endColumn":8,"fix":{"range":[1018,1018],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":53,"column":40,"nodeType":null,"messageId":"insert","endLine":53,"endColumn":40,"fix":{"range":[1425,1425],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":54,"column":8,"nodeType":null,"messageId":"insert","endLine":54,"endColumn":8,"fix":{"range":[1433,1433],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":66,"column":40,"nodeType":null,"messageId":"insert","endLine":66,"endColumn":40,"fix":{"range":[1795,1795],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":67,"column":8,"nodeType":null,"messageId":"insert","endLine":67,"endColumn":8,"fix":{"range":[1803,1803],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":79,"column":40,"nodeType":null,"messageId":"insert","endLine":79,"endColumn":40,"fix":{"range":[2163,2163],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":80,"column":8,"nodeType":null,"messageId":"insert","endLine":80,"endColumn":8,"fix":{"range":[2171,2171],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":96,"column":42,"nodeType":null,"messageId":"insert","endLine":96,"endColumn":42,"fix":{"range":[2735,2735],"text":","}},{"ruleId":"prettier/prettier","severity":2,"message":"Insert `,`","line":107,"column":8,"nodeType":null,"messageId":"insert","endLine":107,"endColumn":8,"fix":{"range":[2992,2992],"text":","}}],"suppressedMessages":[],"errorCount":10,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":10,"fixableWarningCount":0,"source":"export interface ThemeStyles {\n  stylesheet: string;\n  variables: Record<string, string>;\n  additionalCSS?: string;\n}\n\nexport class DocsifyThemeAdapter {\n  private theme: string;\n\n  constructor(theme = 'vue') {\n    this.theme = theme.toLowerCase();\n  }\n\n  getThemeStyles(): ThemeStyles {\n    switch (this.theme) {\n      case 'vue':\n        return this.getVueTheme();\n      case 'dark':\n        return this.getDarkTheme();\n      case 'buble':\n        return this.getBubleTheme();\n      case 'pure':\n        return this.getPureTheme();\n      case 'dolphin':\n        return this.getDolphinTheme();\n      default:\n        return this.getVueTheme();\n    }\n  }\n\n  private getVueTheme(): ThemeStyles {\n    return {\n      stylesheet: 'https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/vue.css',\n      variables: {\n        '--theme-color': '#42b983',\n        '--theme-color-dark': '#33a06f',\n        '--text-color-base': '#2c3e50',\n        '--text-color-secondary': '#646473',\n        '--text-color-tertiary': '#81818e'\n      }\n    };\n  }\n\n  private getDarkTheme(): ThemeStyles {\n    return {\n      stylesheet: 'https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/dark.css',\n      variables: {\n        '--theme-color': '#ea6f5a',\n        '--theme-color-dark': '#c85849',\n        '--text-color-base': '#b4b4b4',\n        '--text-color-secondary': '#efefef',\n        '--text-color-tertiary': '#eee',\n        '--background-color': '#252529'\n      }\n    };\n  }\n\n  private getBubleTheme(): ThemeStyles {\n    return {\n      stylesheet: 'https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/buble.css',\n      variables: {\n        '--theme-color': '#0074d9',\n        '--theme-color-dark': '#0059a6',\n        '--text-color-base': '#333',\n        '--text-color-secondary': '#555',\n        '--text-color-tertiary': '#777'\n      }\n    };\n  }\n\n  private getPureTheme(): ThemeStyles {\n    return {\n      stylesheet: 'https://cdn.jsdelivr.net/npm/docsify@4/lib/themes/pure.css',\n      variables: {\n        '--theme-color': '#0074d9',\n        '--theme-color-dark': '#0059a6',\n        '--text-color-base': '#333',\n        '--text-color-secondary': '#555',\n        '--text-color-tertiary': '#777'\n      }\n    };\n  }\n\n  private getDolphinTheme(): ThemeStyles {\n    return {\n      stylesheet: 'https://cdn.jsdelivr.net/npm/docsify-themeable@0/dist/css/theme-simple.css',\n      variables: {\n        '--theme-color': '#1E90FF',\n        '--theme-color-dark': '#0077ea',\n        '--text-color-base': '#333',\n        '--text-color-secondary': '#555',\n        '--text-color-tertiary': '#777',\n        '--sidebar-background': '#f8f8f8',\n        '--sidebar-nav-link-color': '#444',\n        '--sidebar-nav-link-color--active': '#1E90FF',\n        '--sidebar-name-color': '#1E90FF'\n      },\n      additionalCSS: `\n        .sidebar {\n          border-right: 1px solid rgba(0,0,0,0.07);\n        }\n        .markdown-section code {\n          border-radius: 3px;\n          background-color: #f8f8f8;\n          color: #e96900;\n        }\n      `\n    };\n  }\n\n  generateThemeCSS(): string {\n    const { variables, additionalCSS } = this.getThemeStyles();\n    let css = ':root {\\n';\n\n    for (const [key, value] of Object.entries(variables)) {\n      css += `  ${key}: ${value};\\n`;\n    }\n\n    css += '}\\n';\n\n    if (additionalCSS) {\n      css += additionalCSS;\n    }\n\n    return css;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/themes/docsify-theme-manager.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/tools/plugin-docs-generator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/build.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/build.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/cms.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/cms.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/component.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/component.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/design.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/design.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/handlebars.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/index.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/index.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/openapi.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/parser.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/plugin.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/types/workbox.d.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/cache.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/config-presets.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/config-validator.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/dependency-graph.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/dev-server-class.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/dev-server.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/errors.ts","messages":[{"ruleId":"@typescript-eslint/no-unused-vars","severity":1,"message":"'__' is defined but never used.","line":144,"column":45,"nodeType":"Identifier","messageId":"unusedVar","endLine":144,"endColumn":47}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { logger } from './logger.js';\n\n/**\n * Base error class for all site generator errors\n * Provides standardized error handling with error codes and contextual information\n */\nexport class SiteGeneratorError extends Error {\n  code: string;\n  context?: Record<string, unknown>;\n\n  constructor(message: string, code: string, context?: Record<string, unknown>) {\n    super(message);\n    this.name = this.constructor.name;\n    this.code = code;\n    this.context = context;\n\n    // Capture stack trace\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n  /**\n   * Returns a formatted error message with context information\n   */\n  getFormattedMessage(): string {\n    let message = `[${this.code}] ${this.message}`;\n\n    if (this.context && Object.keys(this.context).length > 0) {\n      message += '\\nContext:';\n      for (const [key, value] of Object.entries(this.context)) {\n        message += `\\n  ${key}: ${JSON.stringify(value)}`;\n      }\n    }\n\n    return message;\n  }\n}\n\n/**\n * Error thrown when there's an issue with configuration\n */\nexport class ConfigurationError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'CONFIG_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with parsing documentation\n */\nexport class ParserError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'PARSER_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with generating components\n */\nexport class GeneratorError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'GENERATOR_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with building the website\n */\nexport class BuildError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'BUILD_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with plugins\n */\nexport class PluginError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'PLUGIN_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with file system operations\n */\nexport class FileSystemError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'FS_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when a feature is not implemented\n */\nexport class NotImplementedError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'NOT_IMPLEMENTED', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with templates\n */\nexport class TemplateError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'TEMPLATE_ERROR', context);\n  }\n}\n\n/**\n * Error thrown when there's an issue with validation\n */\nexport class ValidationError extends SiteGeneratorError {\n  constructor(message: string, context?: Record<string, unknown>) {\n    super(message, 'VALIDATION_ERROR', context);\n  }\n}\n\n/**\n * Global error handler for uncaught exceptions\n */\nexport function setupGlobalErrorHandler(verbose = false): void {\n  process.on('uncaughtException', error => {\n    logger.error('\\n🔥 Uncaught Exception:');\n\n    if (error instanceof SiteGeneratorError) {\n      logger.error(error.getFormattedMessage());\n    } else {\n      logger.error(`[UNKNOWN_ERROR] ${error.message}`);\n    }\n\n    if (verbose) {\n      logger.error('\\nStack Trace:');\n      logger.error(error.stack);\n    } else {\n      logger.error('\\nRun with --verbose flag for more details.');\n    }\n\n    process.exit(1);\n  });\n\n  process.on('unhandledRejection', (reason, __) => {\n    logger.error('\\n🔥 Unhandled Promise Rejection:');\n\n    if (reason instanceof SiteGeneratorError) {\n      logger.error(reason.getFormattedMessage());\n    } else {\n      logger.error(`[UNHANDLED_REJECTION] ${reason}`);\n    }\n\n    if (verbose) {\n      logger.error('\\nStack Trace:');\n      logger.error((reason as Error).stack);\n    } else {\n      logger.error('\\nRun with --verbose flag for more details.');\n    }\n\n    process.exit(1);\n  });\n}\n\n/**\n * Error handler for async functions\n * @param fn Async function to wrap with error handling\n * @returns Wrapped function with error handling\n */\nexport function withErrorHandling<T extends unknown[], R>(\n  fn: (...args: T) => Promise<R>\n): (...args: T) => Promise<R> {\n  return async (...args: T): Promise<R> => {\n    try {\n      return await fn(...args);\n    } catch (error) {\n      if (error instanceof SiteGeneratorError) {\n        throw error;\n      } else {\n        throw new SiteGeneratorError(\n          (error as Error).message || 'Unknown error occurred',\n          'INTERNAL_ERROR',\n          { originalError: error }\n        );\n      }\n    }\n  };\n}\n\n/**\n * Try-catch wrapper for async functions\n * @param fn Function to execute\n * @param errorHandler Optional error handler\n * @returns Result of the function or error handler\n */\nexport async function tryCatch<T>(\n  fn: () => Promise<T>,\n  errorHandler?: (error: unknown) => T | Promise<T>\n): Promise<T> {\n  try {\n    return await fn();\n  } catch (error) {\n    if (errorHandler) {\n      return await errorHandler(error);\n    }\n    throw error;\n  }\n}\n\n/**\n * Try-catch wrapper for sync functions\n * @param fn Function to execute\n * @param errorHandler Optional error handler\n * @returns Result of the function or error handler\n */\nexport function tryCatchSync<T>(fn: () => T, errorHandler?: (error: unknown) => T): T {\n  try {\n    return fn();\n  } catch (error) {\n    if (errorHandler) {\n      return errorHandler(error);\n    }\n    throw error;\n  }\n}\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/file-watcher.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/incremental.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/logger.ts","messages":[{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":6,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":6,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[138,141],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[138,141],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":14,"column":36,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":14,"endColumn":39,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[348,351],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[348,351],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]},{"ruleId":"@typescript-eslint/no-explicit-any","severity":1,"message":"Unexpected any. Specify a different type.","line":18,"column":37,"nodeType":"TSAnyKeyword","messageId":"unexpectedAny","endLine":18,"endColumn":40,"suggestions":[{"messageId":"suggestUnknown","fix":{"range":[450,453],"text":"unknown"},"desc":"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct."},{"messageId":"suggestNever","fix":{"range":[450,453],"text":"never"},"desc":"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of."}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"/**\n * Logger utility for standardized logging throughout the application\n */\n\nexport const logger = {\n  info: (message: string, ...args: any[]) => {\n    console.log(`[INFO] ${message}`, ...args);\n  },\n\n  error: (message: string, error: Error | unknown) => {\n    console.error(`[ERROR] ${message}`, error);\n  },\n\n  warn: (message: string, ...args: any[]) => {\n    console.warn(`[WARN] ${message}`, ...args);\n  },\n\n  debug: (message: string, ...args: any[]) => {\n    console.debug(`[DEBUG] ${message}`, ...args);\n  },\n};\n","usedDeprecatedRules":[]},{"filePath":"/Users/monemnaifer/Library/CloudStorage/GoogleDrive-monemmacos@gmail.com/My Drive/Strategic AI Integration/Site_Generator/src/utils/performance.ts","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]
